[gd_scene load_steps=16 format=3 uid="uid://bb0hx7joolbam"]

[ext_resource type="Texture2D" uid="uid://btvqi3dcwqsrx" path="res://resources/sprites/painters/blue painter beta.png" id="1_3vyb7"]
[ext_resource type="PackedScene" uid="uid://hpl4u3425sy7" path="res://scenes/bomb.tscn" id="3_qhqgy"]
[ext_resource type="PackedScene" uid="uid://dl80vy8siey7k" path="res://scenes/input_synchronizer.tscn" id="4_dqkch"]

[sub_resource type="GDScript" id="GDScript_o6xl0"]
script/source = "extends CharacterBody2D

@onready var label: Label = $Label
@onready var sprite: Sprite2D = $Pivot/Sprite2D
@export var max_speed = 300
@export var acceleration = 600
@export var deceleration = 600
@export var bomb_scene: PackedScene
const BLUE_PAINTER_BETA = preload(\"res://resources/sprites/painters/blue painter beta.png\")
const RED_PAINTER_BETA = preload(\"res://resources/sprites/painters/red painter beta.png\")
@onready var multiplayer_spawner: MultiplayerSpawner = $MultiplayerSpawner
@onready var animation_tree: AnimationTree = $AnimationTree
@onready var playback = animation_tree[\"parameters/playback\"]
@onready var pivot: Node2D = $Pivot
@onready var input_synchronizer: InputSynchronizer = $InputSynchronizer
@onready var sync_timer: Timer = $SyncTimer

func setup(player_data: Statics.PlayerData):
	label.text = player_data.name
	name = str(player_data.id)
	set_multiplayer_authority(player_data.id, false)
	input_synchronizer.set_multiplayer_authority(player_data.id)
	sprite.texture = BLUE_PAINTER_BETA if player_data.role == Statics.Role.ROLE_A else RED_PAINTER_BETA
	if is_multiplayer_authority():
		sync_timer.timeout.connect(_on_sync)
		sync_timer.start()

func _physics_process(delta: float) -> void:
	var move_input = input_synchronizer.move_input
	velocity = velocity.move_toward(move_input * max_speed, acceleration *delta)
	if move_input == Vector2.ZERO:
		velocity = velocity.move_toward(Vector2.ZERO, deceleration * delta)
	
	if input_synchronizer.bomb:
		input_synchronizer.bomb = false
		if is_multiplayer_authority():
			bomb.rpc_id(1, position)
	
	if move_input.x:
		pivot.scale.x = sign(move_input.x)
	
	move_and_slide()
	
	if is_multiplayer_authority():
		send_data.rpc(position, velocity)
		
	# animations
	if velocity:
		playback.travel(\"walk\")
	else:
		playback.travel(\"idle\")
			
	
func _input(event: InputEvent) -> void:
	if is_multiplayer_authority():
		pass
		
@rpc(\"unreliable_ordered\")
func send_data(pos: Vector2, vel: Vector2) -> void:
	position = lerp(position, pos, 0.5)
	velocity = velocity.lerp(vel, 1)
	
@rpc(\"call_local\")
func bomb(spawn_position: Vector2):
	var bomb_inst = bomb_scene.instantiate()
	bomb_inst.global_position = spawn_position
	multiplayer_spawner.add_child(bomb_inst, true)
	
func _on_sync() -> void:
	send_data.rpc(position, velocity)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_qhqgy"]

[sub_resource type="Animation" id="Animation_dqkch"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_qhqgy"]
resource_name = "idle"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_qlg0r"]
resource_name = "walk"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.133333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_qlg0r"]
_data = {
&"RESET": SubResource("Animation_dqkch"),
&"idle": SubResource("Animation_qhqgy"),
&"walk": SubResource("Animation_qlg0r")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_qhqgy"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_dqkch"]
animation = &"walk"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_qlg0r"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_tuyoq"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_fjrip"]

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_tuyoq"]
states/idle/node = SubResource("AnimationNodeAnimation_qhqgy")
states/idle/position = Vector2(297, 68)
states/walk/node = SubResource("AnimationNodeAnimation_dqkch")
states/walk/position = Vector2(477, 78)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_qlg0r"), "idle", "walk", SubResource("AnimationNodeStateMachineTransition_tuyoq"), "walk", "idle", SubResource("AnimationNodeStateMachineTransition_fjrip")]

[node name="Player" type="CharacterBody2D"]
texture_filter = 3
motion_mode = 1
script = SubResource("GDScript_o6xl0")
max_speed = null
acceleration = null
deceleration = null
bomb_scene = ExtResource("3_qhqgy")

[node name="Label" type="Label" parent="."]
offset_left = -23.0
offset_top = -52.0
offset_right = 24.0
offset_bottom = -29.0
text = "Name"
horizontal_alignment = 1

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
_spawnable_scenes = PackedStringArray("uid://hpl4u3425sy7")
spawn_path = NodePath(".")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2(2, 2)
shape = SubResource("CircleShape2D_qhqgy")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_qlg0r")
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeStateMachine_tuyoq")
anim_player = NodePath("../AnimationPlayer")

[node name="Pivot" type="Node2D" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="Pivot"]
texture_filter = 3
texture = ExtResource("1_3vyb7")
hframes = 2

[node name="InputSynchronizer" parent="." instance=ExtResource("4_dqkch")]

[node name="SyncTimer" type="Timer" parent="."]
process_callback = 0
wait_time = 0.1
