[gd_scene load_steps=18 format=3 uid="uid://s4p7hwbayqss"]

[ext_resource type="Script" uid="uid://rvnt5021nvos" path="res://scenes/main.gd" id="1_0wfyh"]
[ext_resource type="PackedScene" uid="uid://hpl4u3425sy7" path="res://scenes/bomb.tscn" id="2_jyhfs"]
[ext_resource type="Texture2D" uid="uid://btvqi3dcwqsrx" path="res://resources/sprites/painters/blue painter beta.png" id="3_tbgi4"]
[ext_resource type="PackedScene" uid="uid://dl80vy8siey7k" path="res://scenes/input_synchronizer.tscn" id="4_tefeu"]

[sub_resource type="GDScript" id="GDScript_o6xl0"]
script/source = "extends CharacterBody2D

@onready var label: Label = $Label
@onready var sprite: Sprite2D = $Pivot/Sprite2D
@export var max_speed = 300
@export var acceleration = 600
@export var deceleration = 600
@export var bomb_scene: PackedScene
const BLUE_PAINTER_BETA = preload(\"res://resources/sprites/painters/blue painter beta.png\")
const RED_PAINTER_BETA = preload(\"res://resources/sprites/painters/red painter beta.png\")
@onready var multiplayer_spawner: MultiplayerSpawner = $MultiplayerSpawner
@onready var animation_tree: AnimationTree = $AnimationTree
@onready var playback = animation_tree[\"parameters/playback\"]
@onready var pivot: Node2D = $Pivot
@onready var input_synchronizer: InputSynchronizer = $InputSynchronizer
@onready var sync_timer: Timer = $SyncTimer

func setup(player_data: Statics.PlayerData):
	label.text = player_data.name
	name = str(player_data.id)
	set_multiplayer_authority(player_data.id, false)
	input_synchronizer.set_multiplayer_authority(player_data.id)
	sprite.texture = BLUE_PAINTER_BETA if player_data.role == Statics.Role.ROLE_A else RED_PAINTER_BETA
	if is_multiplayer_authority():
		sync_timer.timeout.connect(_on_sync)
		sync_timer.start()

func _physics_process(delta: float) -> void:
	var move_input = input_synchronizer.move_input
	velocity = velocity.move_toward(move_input * max_speed, acceleration *delta)
	if move_input == Vector2.ZERO:
		velocity = velocity.move_toward(Vector2.ZERO, deceleration * delta)
	
	if input_synchronizer.bomb:
		input_synchronizer.bomb = false
		if is_multiplayer_authority():
			bomb.rpc_id(1, position)
	
	if move_input.x:
		pivot.scale.x = sign(move_input.x)
	
	move_and_slide()
	
	if is_multiplayer_authority():
		send_data.rpc(position, velocity)
		
	# animations
	if velocity:
		playback.travel(\"walk\")
	else:
		playback.travel(\"idle\")
			
	
func _input(event: InputEvent) -> void:
	if is_multiplayer_authority():
		pass
		
@rpc(\"unreliable_ordered\")
func send_data(pos: Vector2, vel: Vector2) -> void:
	position = lerp(position, pos, 0.5)
	velocity = velocity.lerp(vel, 1)
	
@rpc(\"call_local\")
func bomb(spawn_position: Vector2):
	var bomb_inst = bomb_scene.instantiate()
	bomb_inst.global_position = spawn_position
	multiplayer_spawner.add_child(bomb_inst, true)
	
func _on_sync() -> void:
	send_data.rpc(position, velocity)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_qhqgy"]

[sub_resource type="Animation" id="Animation_dqkch"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_qhqgy"]
resource_name = "idle"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_qlg0r"]
resource_name = "walk"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.133333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_qlg0r"]
_data = {
&"RESET": SubResource("Animation_dqkch"),
&"idle": SubResource("Animation_qhqgy"),
&"walk": SubResource("Animation_qlg0r")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_qhqgy"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_dqkch"]
animation = &"walk"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_qlg0r"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_tuyoq"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_fjrip"]

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_tuyoq"]
states/idle/node = SubResource("AnimationNodeAnimation_qhqgy")
states/idle/position = Vector2(297, 68)
states/walk/node = SubResource("AnimationNodeAnimation_dqkch")
states/walk/position = Vector2(477, 78)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_qlg0r"), "idle", "walk", SubResource("AnimationNodeStateMachineTransition_tuyoq"), "walk", "idle", SubResource("AnimationNodeStateMachineTransition_fjrip")]

[sub_resource type="PackedScene" id="PackedScene_tipki"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("Player", "CharacterBody2D", "texture_filter", "motion_mode", "script", "max_speed", "acceleration", "deceleration", "bomb_scene", "Label", "Label", "offset_left", "offset_top", "offset_right", "offset_bottom", "text", "horizontal_alignment", "MultiplayerSpawner", "MultiplayerSpawner", "_spawnable_scenes", "spawn_path", "CollisionShape2D", "CollisionShape2D", "scale", "shape", "AnimationPlayer", "AnimationPlayer", "libraries", "AnimationTree", "AnimationTree", "tree_root", "anim_player", "Pivot", "Node2D", "Sprite2D", "Sprite2D", "texture_filter", "texture", "hframes", "InputSynchronizer", "SyncTimer", "Timer", "process_callback", "wait_time"),
"node_count": 10,
"node_paths": [NodePath("."), NodePath("."), NodePath("."), NodePath("."), NodePath("."), NodePath("."), NodePath("./Pivot"), NodePath("."), NodePath(".")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 7, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 0, 1073741824, 0, 10, 9, -1, 6, 11, 7, 12, 8, 13, 9, 14, 10, 15, 11, 16, 12, 0, 1073741825, 0, 18, 17, -1, 2, 19, 13, 20, 14, 0, 1073741826, 0, 22, 21, -1, 2, 23, 15, 24, 16, 0, 1073741827, 0, 26, 25, -1, 1, 27, 17, 0, 1073741828, 0, 29, 28, -1, 2, 30, 18, 31, 19, 0, 1073741829, 0, 33, 32, -1, 0, 0, 1073741830, 0, 35, 34, -1, 3, 36, 20, 37, 21, 38, 22, 0, 1073741831, 0, 2147483647, 39, 23, 0, 0, 1073741832, 0, 41, 40, -1, 2, 42, 24, 43, 25, 0),
"variants": [3, 1, SubResource("GDScript_o6xl0"), null, null, null, ExtResource("2_jyhfs"), -23.0, -52.0, 24.0, -29.0, "Name", 1, PackedStringArray("uid://hpl4u3425sy7"), NodePath("."), Vector2(2, 2), SubResource("CircleShape2D_qhqgy"), {
&"": SubResource("AnimationLibrary_qlg0r")
}, SubResource("AnimationNodeStateMachine_tuyoq"), NodePath("../AnimationPlayer"), 3, ExtResource("3_tbgi4"), 2, ExtResource("4_tefeu"), 0, 0.1],
"version": 3
}

[node name="Main" type="Node2D"]
script = ExtResource("1_0wfyh")
player_scene = SubResource("PackedScene_tipki")

[node name="Players" type="Node2D" parent="."]
y_sort_enabled = true

[node name="Markers" type="Node2D" parent="."]

[node name="Marker2D" type="Marker2D" parent="Markers"]
position = Vector2(359, 355)

[node name="Marker2D2" type="Marker2D" parent="Markers"]
position = Vector2(900, 355)
